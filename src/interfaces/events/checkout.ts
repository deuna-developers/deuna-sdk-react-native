export enum CheckoutEventType {
  custom = 'custom',
  purchase = 'purchase',
  purchaseError = 'purchaseError',
  linkClose = 'linkClose',
  linkFailed = 'linkFailed',
  purchaseRejected = 'purchaseRejected',
  paymentProcessing = 'paymentProcessing',
  paymentMethodsAddCard = 'paymentMethodsAddCard',
  paymentMethodsCardExpirationDateInitiated = 'paymentMethodsCardExpirationDateInitiated',
  paymentMethodsCardNameEntered = 'paymentMethodsCardNameEntered',
  apmSuccess = 'apmSuccess',
  apmSuccessful = 'apmSuccessful',
  changeAddress = 'changeAddress',
  changeCart = 'changeCart',
  paymentClick = 'paymentClick',
  apmClickRedirect = 'apmClickRedirect',
  paymentMethodsCardNumberInitiated = 'paymentMethodsCardNumberInitiated',
  paymentMethodsCardNumberEntered = 'paymentMethodsCardNumberEntered',
  paymentMethodsEntered = 'paymentMethodsEntered',
  checkoutStarted = 'checkoutStarted',
  linkStarted = 'linkStarted',
  paymentMethodsStarted = 'paymentMethodsStarted',
  paymentMethodsSelected = 'paymentMethodsSelected',
  adBlock = 'adBlock',
  paymentMethods3dsInitiated = 'paymentMethods3dsInitiated',
  pointsToWinStarted = 'pointsToWinStarted',
  paymentMethodsCardSecurityCodeInitiated = 'paymentMethodsCardSecurityCodeInitiated',
  paymentMethodsCardSecurityCodeEntered = 'paymentMethodsCardSecurityCodeEntered',
  paymentMethodsCardExpirationDateEntered = 'paymentMethodsCardExpirationDateEntered',
  paymentMethodsCardNameInitiated = 'paymentMethodsCardNameInitiated',
  paymentMethodsNotAvailable = 'paymentMethodsNotAvailable',
  paymentMethodsShowMore = 'paymentMethodsShowMore',
  paymentMethodsShowMyCards = 'paymentMethodsShowMyCards',
  benefitsStarted = 'benefitsStarted',
  donationsStarted = 'donationsStarted',
  donationsUsed = 'donationsUsed',
  onBinDetected = 'onBinDetected',
  onInstallmentSelected = 'onInstallmentSelected',
  onDownloadVoucher = 'onDownloadVoucher',
}

export interface CheckoutEvent {
  type: CheckoutEventType;
  data: Record<string, any>;
}
